
long long maxMoneyLooted(vector<int> &houses, int n)
{
    /*
        Write your code here.
        Don't write main().
         Don't take input, it is passed as function argument.
         Don't print output.
         Taking input and printing output is handled automatically.
    */
    long long prev = houses[0], prev2 = 0;
    for(int i = 1; i < n; i++) {
        long long pick = houses[i] + prev2;
        long long notPick = prev;
        long long curr = max(pick, notPick);
        prev2 = prev;
        prev = curr;
    }
    return prev;
}
long long int houseRobber(vector<int>& valueInHouse)
{
    // Write your code here.
   vector<int> temp1, temp2;
    int n = valueInHouse.size();
    if(n == 1)
        return valueInHouse[0];
    for(int i = 0; i < n; i++) {
        if(i != 0)
            temp1.push_back(valueInHouse[i]);
        if(i != n-1)
            temp2.push_back(valueInHouse[i]);
    }
    return max(maxMoneyLooted(temp1, n-1), maxMoneyLooted(temp2, n-1));
}
